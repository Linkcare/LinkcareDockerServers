FROM ubuntu:16.04

COPY php-ext-* /usr/local/bin/
RUN chmod 755 /usr/local/bin/php-ext-* \
  && apt-get update \
  && apt-get install -y autoconf file g++ gcc libc-dev make pkg-config re2c --no-install-recommends \
  # persistent / runtime deps
  && apt-get install -y ca-certificates curl libedit2 libsqlite3-0 libxml2 --no-install-recommends

ENV PHP_INI_DIR /usr/local/etc/php
RUN mkdir -p $PHP_INI_DIR/conf.d

##<autogenerated>##
RUN apt-get update && apt-get install -y apache2 --no-install-recommends

RUN rm -rf /var/www/html \
  && mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html \
  && chown -R www-data:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html

# Apache + PHP requires preforking Apache for best results
RUN a2dismod mpm_event && a2enmod mpm_prefork \
  && mv /etc/apache2/apache2.conf /etc/apache2/apache2.conf.dist \
  && rm /etc/apache2/conf-enabled/* /etc/apache2/sites-enabled/* \
  # Add SSL modules
  && mv /etc/apache2/mods-available/ssl* /etc/apache2/mods-enabled/ \
  && mv /etc/apache2/mods-available/socache* /etc/apache2/mods-enabled/ \
  && { \
  echo 'Mutex file:/var/lock/apache2 default'; \
  echo 'PidFile /var/run/apache2/apache2.pid'; \
  echo 'Timeout 300'; \
  echo 'KeepAlive On'; \
  echo 'MaxKeepAliveRequests 100'; \
  echo 'KeepAliveTimeout 5'; \
  echo 'User www-data'; \
  echo 'Group www-data'; \
  echo 'HostnameLookups Off'; \
  echo 'ErrorLog /proc/self/fd/2'; \
  echo 'LogLevel warn'; \
  echo ' '; \
  echo 'IncludeOptional mods-enabled/*.load'; \
  echo 'IncludeOptional mods-enabled/*.conf'; \
  echo ' '; \
  echo '# ports.conf'; \
  echo "Listen 80"; \
  echo ' '; \
  echo '<Directory />'; \
  echo '	Options FollowSymLinks'; \
  echo '	AllowOverride None'; \
  echo '	Require all denied'; \
  echo '</Directory>'; \
  echo ' '; \
  echo '<Directory /var/www/>'; \
  echo '	AllowOverride All'; \
  echo '	Require all granted'; \
  echo '</Directory>'; \
  echo ' '; \
  echo 'DocumentRoot /var/www/html'; \
  echo ' '; \
  echo 'AccessFileName .htaccess'; \
  echo '<FilesMatch "^\.ht">'; \
  echo '	Require all denied'; \
  echo '</FilesMatch>'; \
  echo ' '; \
  echo 'LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined'; \
  echo 'LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined'; \
  echo 'LogFormat "%h %l %u %t \"%r\" %>s %O" common'; \
  echo 'LogFormat "%{Referer}i -> %U" referer'; \
  echo 'LogFormat "%{User-agent}i" agent'; \
  echo ' '; \
  echo 'CustomLog /var/log/apache2/custom_log combined'; \
  echo ' '; \
  echo '<FilesMatch \.php$>'; \
  echo '	SetHandler application/x-httpd-php'; \
  echo '</FilesMatch>'; \
  echo ' '; \
  echo '# Multiple DirectoryIndex directives within the same context will add'; \
  echo '# to the list of resources to look for rather than replace'; \
  echo '# https://httpd.apache.org/docs/current/mod/mod_dir.html#directoryindex'; \
  echo 'DirectoryIndex disabled'; \
  echo 'DirectoryIndex index.php index.html'; \
  echo ' '; \
  echo 'IncludeOptional conf-enabled/*.conf'; \
  echo 'IncludeOptional sites-enabled/*.conf'; \
  } > /etc/apache2/apache2.conf

ENV PHP_EXTRA_BUILD_DEPS apache2-dev
ENV PHP_EXTRA_CONFIGURE_ARGS --with-apxs2
##</autogenerated>##

ENV GPG_KEYS CBAF69F173A0FEA4B537F470D66C9593118BCCB6

ENV PHP_FILENAME php-7.3.8.tar.xz
ENV PHP_SHA256 f6046b2ae625d8c04310bda0737ac660dc5563a8e04e8a46c1ee24ea414ad5a5

RUN set -xe; \
  buildDeps="$PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev  libxml2-dev  xz-utils"; \
  apt-get install -y $buildDeps --no-install-recommends; \
  curl -fSL "https://www.php.net/distributions/$PHP_FILENAME" -o "$PHP_FILENAME"; \
  echo "$PHP_SHA256 *$PHP_FILENAME" | sha256sum -c -; \
  curl -fSL "https://www.php.net/distributions/$PHP_FILENAME.asc" -o "$PHP_FILENAME.asc"; \
  export GNUPGHOME="$(mktemp -d)"; \
  for key in $GPG_KEYS; do \
    gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
  done; \
  gpg --batch --verify "$PHP_FILENAME.asc" "$PHP_FILENAME"; \
  rm -r "$GNUPGHOME" "$PHP_FILENAME.asc"; \
  mkdir -p /usr/src/php; \
  tar -xf "$PHP_FILENAME" -C /usr/src/php --strip-components=1; \
  rm "$PHP_FILENAME"

RUN cd /usr/src/php; \
  ./configure \
    --with-config-file-path="$PHP_INI_DIR" \
    --with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
    $PHP_EXTRA_CONFIGURE_ARGS \
    --disable-cgi \
    --enable-mysqlnd \
    --enable-mbstring \
    --with-mysqli \
    --with-curl \
    --with-libedit \
    --with-openssl \
    --with-zlib; \
  make -j"$(nproc)"; \
  make install; \
  { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; }; \
  make clean

# INSTALL AND CONFIGURE PHP EXTENSIONS
# Copy Oracle instantclient files (OS drivers)
COPY OracleClient/* /tmp/

# Install Oracle drivers and create symbolic links
RUN apt-get install -y unzip \
  && unzip /tmp/instantclient-basic-linux.x64-12.1.0.2.0.zip -d /usr/local/ \
  && unzip /tmp/instantclient-sdk-linux.x64-12.1.0.2.0.zip -d /usr/local/ \
  && unzip /tmp/instantclient-sqlplus-linux.x64-12.1.0.2.0.zip -d /usr/local/ \
  && ln -s /usr/local/instantclient_12_1 /usr/local/instantclient \
  && ln -s /usr/local/instantclient/libclntsh.so.12.1 /usr/local/instantclient/libclntsh.so \
  && ln -s /usr/local/instantclient/sqlplus /usr/bin/sqlplus

# Install libraries required for PHP extensions
RUN apt-get install -y apt-utils git curl libxml2-dev libbz2-dev re2c libpng++-dev libpng3 libjpeg-dev libvpx-dev zlib1g-dev \
  libgd-dev libssl-dev libtidy-dev libxslt1-dev libmagic-dev libexif-dev file libssh2-1-dev libaio-dev libbz2-dev libpng-dev \
  libpcre3-dev libfreetype6-dev libmcrypt-dev libxslt-dev xfonts-base xfonts-75dpi fonts-texgyre \
  fonts-wqy-microhei ttf-wqy-microhei fonts-wqy-zenhei ttf-wqy-zenhei libzip-dev

# Install PHP extensions
RUN pecl install mcrypt-1.0.2 && php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
  && php-ext-configure oci8 --with-oci8=instantclient,/usr/local/instantclient \
  && php-ext-install iconv mbstring xsl soap bcmath bz2 calendar exif shmop gd oci8 zip \
  && php-ext-enable mcrypt opcache

# Install Redis PHP extension
RUN pecl install redis && php-ext-enable redis

# Install oauth (authentication) PHP extension
RUN pecl install oauth \
  && php-ext-enable oauth

# Needed for wkhtmltopdf, installed by composer
RUN apt-get install -y libxrender1

# Install base packages
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer

# Apache start command
COPY apache2-foreground /usr/local/bin/
RUN chmod 755 /usr/local/bin/apache2-foreground

EXPOSE 80
CMD ["apache2-foreground"]
